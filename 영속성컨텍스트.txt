1. 엔티티의 생명주기
 * 비영속 (new / transient)
  - 영속성 컨텍스트와 전혀 관계가 없는 새로운 상태
  - 객체만 생성한 상태

 * 영속 (managed)
  - 영속성 컨텍스트에 관리되는 상태 (1차 캐시에 저장)
  - persistence 를 하거나 find 로 가져왔을때 영속상태가됨
  - persistence 를 호출할때는 쿼리만 보관하고 실제로 반영하지는 않음 (commit 시에 실제로 반영)

 * 준영속(detached)
  - 영속성 컨텍스트에 저장되었다가 분리된 상태 (em.detach(객체))
  - em.clear() : 영속성 컨텍스트를 초기화

 * 삭제 (removed)
  - 삭제된 상태


EntityManager 를 생성하면 영속성 컨텍스트가 생성됨

persistence 후 find 를 할 경우 persistence 로 1차캐시에 저장한 객체를 가져옴

find 시 1차캐시에 데이터가 있다면 1차캐시에 있는 객체를 가져오고
1차캐시에 데이터가 없다면 DB 에서 가져오고 1차캐시에 저장

1차캐시에는 @id와 Entity 가 저장됨


플러시
 - 영속성 컨텍스트의 변경내용을 데이터베이스에 반영
 - em.flush() : 직접호출
 - 트랜잭션 commit : 트랜젝션에서 자동 호출
 - 영속성 컨텍스트를 비우는게 아닌 영속성컨텍스트의 변경 내용을 데이터베이스에 동기화